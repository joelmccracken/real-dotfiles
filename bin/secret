#!/usr/bin/env ruby

require 'fileutils'

KEY_VALUE_DIR = 'Secure Notes\\key-value'

def get_notes
  listing = `lpass ls '#{KEY_VALUE_DIR}'`
  listing.lines.map { |line|
    # add escapes in to the dir string... experimeintally shown to work
    escapes_added = KEY_VALUE_DIR.gsub('\\', '\\\\\\')
    regex = /#{escapes_added}\/(.*) \[id: (\d+)\]/
    match_data = line.match(regex)
    {name: match_data[1], id: match_data[2]}
  }.reject { |m| m[:name] == ""}
end

def list
  get_notes.each do |note|
    puts note[:name]
  end
end


def sync
  secrets_dir = File.expand_path "~/secrets"

  FileUtils.mkdir_p(secrets_dir)

  get_notes.each do |note|
    note_contents = `lpass show #{note[:id]} --notes`
    note_filename = File.join(secrets_dir, note[:name])
    puts "writing #{note_filename}"
    File.write(note_filename, note_contents)

    `chmod og-r #{note_filename}`
  end
end

def add(file)
  new_note = File.join(KEY_VALUE_DIR, File.basename(file))
  command = %W{lpass edit --note --non-interactive #{new_note}}

  IO.popen(command, "r+") do |io|
    io.write File.read(file)
    io.close_write
  end

  `lpass sync`
end

case ARGV.first
when "list" then
  puts "LIST"
  list
when "sync" then
  puts "SYNC"
  sync
when "add" then
  puts "ADD"
  add ARGV[1]
when "test" then
  puts "TEST"
else
  puts "check script for usage"
end
